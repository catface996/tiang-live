{
  "title": "Hook Tasks",
  "subtitle": "Manage event-driven hook tasks",
  "breadcrumb": {
    "home": "Home",
    "taskManagement": "Task Management",
    "hookTasks": "Hook Tasks"
  },
  "createHook": "Create Hook Task",
  "editHook": "Edit Hook Task",
  "createTitle": "Create Hook Task",
  "editTitle": "Edit Hook Task",
  "viewHook": "View Hook Task",
  "deleteHook": "Delete Hook Task",
  "testHook": "Test Hook",
  "refresh": "Refresh",
  "stats": {
    "totalHooks": "Total Hooks",
    "activeHooks": "Active Hooks",
    "triggeredToday": "Triggered Today",
    "successRate": "Success Rate",
    "runningHooks": "Running Hooks"
  },
  "status": {
    "active": "Active",
    "inactive": "Inactive",
    "error": "Error",
    "running": "Running",
    "paused": "Paused",
    "draft": "Draft",
    "all": "All Status"
  },
  "triggerType": {
    "webhook": "Webhook",
    "schedule": "Scheduled Trigger",
    "event": "Event Trigger",
    "manual": "Manual Trigger",
    "all": "All Types"
  },
  "search": {
    "placeholder": "Search hook task name, description...",
    "type": "Trigger Type",
    "status": "Task Status",
    "allTypes": "All Types",
    "allStatuses": "All Statuses"
  },
  "filter": {
    "triggerType": "Trigger Type",
    "status": "Task Status",
    "sort": "Sort Order",
    "refresh": "Refresh",
    "reset": "Reset Filters"
  },
  "sort": {
    "newest": "Newest First",
    "oldest": "Oldest First"
  },
  "form": {
    "name": "Hook Name",
    "namePlaceholder": "Enter hook name",
    "nameRequired": "Please enter hook name",
    "description": "Hook Description",
    "descriptionPlaceholder": "Enter hook description",
    "descriptionRequired": "Please enter hook description",
    "triggerType": "Trigger Type",
    "triggerTypePlaceholder": "Select trigger type",
    "triggerTypeRequired": "Please select trigger type",
    "type": "Hook Type",
    "typePlaceholder": "Select hook type",
    "typeRequired": "Please select hook type",
    "endpoint": "Endpoint URL",
    "endpointPlaceholder": "Enter endpoint URL",
    "endpointRequired": "Please enter endpoint URL",
    "method": "HTTP Method",
    "methodPlaceholder": "Select HTTP method",
    "methodRequired": "Please select HTTP method",
    "headers": "Request Headers",
    "headersPlaceholder": "Enter request headers",
    "payload": "Request Body",
    "payloadPlaceholder": "Enter request body",
    "timeout": "Timeout (seconds)",
    "timeoutPlaceholder": "Enter timeout duration",
    "timeoutRequired": "Please set timeout duration",
    "retryCount": "Retry Count",
    "retryCountPlaceholder": "Enter retry count",
    "retryCountRequired": "Please set retry count",
    "retryDelay": "Retry Delay (seconds)",
    "retryDelayPlaceholder": "Enter retry delay",
    "retryDelayRequired": "Please set retry delay"
  },
  "types": {
    "webhook": "Webhook",
    "schedule": "Scheduled Trigger",
    "event": "Event Trigger",
    "manual": "Manual Trigger",
    "database": "Database",
    "message_queue": "Message Queue",
    "api_call": "API Call",
    "script": "Script"
  },
  "methods": {
    "GET": "GET",
    "POST": "POST",
    "PUT": "PUT",
    "DELETE": "DELETE",
    "PATCH": "PATCH"
  },
  "authentication": {
    "title": "Authentication Settings",
    "type": "Authentication Type",
    "none": "No Authentication",
    "basic": "Basic Auth",
    "bearer": "Bearer Token",
    "apiKey": "API Key",
    "oauth2": "OAuth 2.0",
    "databaseCredentials": "Database Credentials"
  },
  "card": {
    "triggerType": "Trigger Type",
    "endpoint": "Endpoint",
    "method": "Method",
    "authentication": "Authentication",
    "lastTriggered": "Last Triggered",
    "successRate": "Success Rate",
    "triggerCount": "Trigger Count",
    "taskCollections": " Task Collections",
    "viewDetails": "View Details",
    "edit": "Edit",
    "test": "Test",
    "pause": "Pause",
    "start": "Start",
    "delete": "Delete",
    "triggerEvent": "Trigger Event",
    "creator": "Creator",
    "enable": "Enable",
    "disable": "Disable"
  },
  "detail": {
    "hookName": "Hook Name",
    "hookType": "Hook Type",
    "description": "Description",
    "endpoint": "Endpoint URL",
    "method": "HTTP Method",
    "authentication": "Authentication",
    "timeout": "Timeout",
    "retryCount": "Retry Count",
    "retryDelay": "Retry Delay",
    "taskCollections": "Associated Task Collections",
    "lastTriggered": "Last Triggered",
    "nextTrigger": "Next Trigger",
    "statistics": "Statistics",
    "successRate": "Success Rate",
    "triggerCount": "Trigger Count",
    "avgResponseTime": "Average Response Time",
    "seconds": "seconds",
    "creator": "Creator",
    "triggeredCollections": "Triggered Collections",
    "noCollections": "No associated task collections",
    "configParams": "Configuration Parameters",
    "headers": "Request Headers",
    "payload": "Request Body",
    "triggerHistory": "Trigger History",
    "recentTriggers": "Recent Trigger Records",
    "triggerTime": "Trigger Time",
    "responseTime": "Response Time",
    "triggerStatus": "Trigger Status",
    "responseCode": "Response Code",
    "authTypes": {
      "bearerToken": "Bearer Token",
      "databaseCredentials": "Database Credentials",
      "apiKey": "API Key",
      "basicAuth": "Basic Auth",
      "oauth2": "OAuth 2.0",
      "none": "No Authentication"
    },
    "targetUrl": "Target URL",
    "httpMethod": "HTTP Method",
    "securityConfig": "Security Configuration",
    "encryption": "Encryption",
    "ipWhitelist": "IP Whitelist",
    "noRestriction": "No Restriction"
  },
  "modal": {
    "hookName": "Hook Name",
    "hookType": "Hook Type",
    "taskCollections": "Associated Task Collections",
    "triggeredCollections": "Triggered Collections",
    "noCollections": "No associated task collections",
    "triggerConfig": "Trigger Configuration",
    "triggerEvent": "Trigger Event",
    "triggerConditions": "Trigger Conditions",
    "executionConfig": "Execution Configuration"
  },
  "list": {
    "title": "Hook Task List",
    "count": " items",
    "empty": "No hook tasks",
    "loading": "Loading...",
    "loadMore": "Load More"
  },
  "pagination": {
    "pageSize": "Items per page",
    "showTotal": "{{start}}-{{end}} of {{total}} items",
    "jumpTo": "Go to",
    "page": "page"
  },
  "messages": {
    "createSuccess": "Hook task created successfully",
    "updateSuccess": "Hook task updated successfully",
    "deleteSuccess": "Hook task deleted successfully",
    "testSuccess": "Hook test successful",
    "testFailed": "Hook test failed",
    "startSuccess": "Hook task started successfully",
    "pauseSuccess": "Hook task paused successfully",
    "loadSuccess": "Hook tasks loaded successfully",
    "loadError": "Failed to load hook tasks",
    "refreshSuccess": "Refresh successful",
    "noData": "No data available",
    "filterNoResult": "No results found for current filters"
  },
  "tips": {
    "createHint": "Hook tasks can respond to system events and automatically trigger related task collections. Please configure trigger conditions and authentication properly.",
    "testHint": "Testing the hook can verify if the configuration is correct",
    "authHint": "Choose appropriate authentication method based on target service requirements"
  },
  "tooltip": {
    "viewHookTasks": "View hook tasks",
    "refresh": "Refresh data",
    "filter": "Filter conditions",
    "search": "Search",
    "sort": "Sort",
    "test": "Test hook",
    "edit": "Edit hook",
    "delete": "Delete hook",
    "start": "Start hook",
    "pause": "Pause hook"
  },
  "debug": {
    "originalData": "Original Data",
    "currentData": "Current Data",
    "filteredData": "Filtered Data",
    "hookId": "Hook ID",
    "filterConditions": "Filter Conditions",
    "triggerType": "Trigger Type",
    "status": "Status",
    "search": "Search"
  }
}
