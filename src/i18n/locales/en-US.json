{
  "common": {
    "confirm": "Confirm",
    "cancel": "Cancel",
    "save": "Save",
    "delete": "Delete",
    "edit": "Edit",
    "add": "Add",
    "view": "View",
    "edit": "Edit",
    "delete": "Delete",
    "download": "Download",
    "search": "Search",
    "refresh": "Refresh",
    "filter": "Filter",
    "cardView": "Card View",
    "listView": "List View",
    "startDate": "Start Date",
    "endDate": "End Date",
    "inDevelopment": "In Development",
    "loading": "Loading...",
    "noData": "No Data",
    "success": "Operation Successful",
    "error": "Operation Failed",
    "warning": "Warning",
    "info": "Information",
    "failed": "Failed",
    "pending": "Pending",
    "total": "Total",
    "page": "Page",
    "pageSize": "Page Size",
    "actions": "Actions",
    "status": "Status",
    "createTime": "Create Time",
    "updateTime": "Update Time",
    "description": "Description",
    "name": "Name",
    "type": "Type",
    "level": "Level",
    "create": "Create",
    "update": "Update",
    "tips": "Tips",
    "stopped": "Stopped",
    "error": "Error",
    "status": "Status",
    "description": "Description",
    "createdAt": "Created At",
    "avgResponseTime": "Avg Response Time",
    "timeout": "Timeout",
    "retryCount": "Retry Count",
    "retryCountRequired": "Please set retry count",
    "retryCountPlaceholder": "Retry count",
    "success": "Success",
    "timeout": "Timeout",
    "export": "Export",
    "import": "Import",
    "reset": "Reset",
    "submit": "Submit",
    "back": "Back",
    "next": "Next",
    "previous": "Previous",
    "finish": "Finish",
    "close": "Close",
    "open": "Open",
    "unit": {
      "count": "",
      "times": " times",
      "seconds": " seconds"
    },
    "unitType": " types",
    "unitRelation": " relations",
    "enable": "Enable",
    "disable": "Disable",
    "yes": "Yes",
    "no": "No",
    "active": "Active",
    "inactive": "Inactive",
    "online": "Online",
    "offline": "Offline",
    "running": "Running",
    "stopped": "Stopped",
    "pending": "Pending",
    "failed": "Failed",
    "completed": "Completed"
  },
  "layout": {
    "title": "Tiang Ops",
    "logout": "Logout",
    "profile": "Profile",
    "settings": "Settings",
    "language": "Language"
  },
  "menu": {
    "dashboard": "Dashboard",
    "planes": "Plane Management",
    "entities": "Entity Management",
    "relationships": "Relationship Graph",
    "sequences": "Sequence Management",
    "agents": "AI Agents",
    "reports": "Report Management",
    "tasks": "Task Management",
    "inspectionTasks": "Inspection Tasks",
    "hookTasks": "Hook Tasks",
    "collections": "Task Collections",
    "solutions": "Industry Models",
    "systemSettings": "System Settings",
    "modelManagement": "Model Management",
    "promptTemplates": "Prompt Templates",
    "tagManagement": "Tag Management",
    "aiAssistant": "AI Assistant"
  },
  "dashboard": {
    "title": "System Overview",
    "subtitle": "Overall operational status and key metrics of Tiang Ops AI system",
    "welcome": "Welcome to Tiang Ops",
    "systemOverview": "System Overview",
    "recentActivities": "Recent Activities",
    "performanceMetrics": "Performance Metrics",
    "quickActions": "Quick Actions",
    "systemStatus": "System Status",
    "taskSuccessRate": "Task Success Rate Statistics",
    "averageResponseTime": "Average Response Time",
    "completionRate": "Completion Rate",
    "avgResponseTime": "Avg Response Time",
    "responseTimeMs": "Response Time (ms)",
    "apiResponseTime": "API Response Time",
    "dbResponseTime": "Database Response Time",
    "cacheResponseTime": "Cache Response Time",
    "resourceUsage": "Resource Usage",
    "alertSummary": "Alert Summary",
    "taskProgress": "Task Progress",
    "healthScore": "Health Score",
    "uptime": "Uptime",
    "totalRequests": "Total Requests",
    "responseTime": "Response Time",
    "errorRate": "Error Rate",
    "activeUsers": "Active Users",
    "dataVolume": "Data Volume",
    "cpuUsage": "CPU Usage",
    "memoryUsage": "Memory Usage",
    "diskUsage": "Disk Usage",
    "networkTraffic": "Network Traffic",
    "executionCount": "Execution Count",
    "systemHealthScore": "System Health Score"
  },
  "planes": {
    "title": "Plane Management",
    "subtitle": "Manage system planes and their hierarchical dependencies",
    "createTitle": "Create Plane",
    "editTitle": "Edit Plane",
    "createSubtitle": "Create new plane definition",
    "editSubtitle": "Modify plane configuration and properties",
    "stats": {
      "totalPlanes": "Total Planes",
      "activePlanes": "Active Planes",
      "warningPlanes": "Warning Planes",
      "errorPlanes": "Error Planes",
      "totalInstances": "Total Instances",
      "totalEntities": "Total Entities",
      "healthyEntities": "Healthy Entities",
      "warningEntities": "Warning Entities",
      "errorEntities": "Error Entities"
    },
    "topology": {
      "title": "Plane Topology Structure",
      "subtitle": "Display hierarchical relationships and dependency structures between planes"
    },
    "dependency": {
      "title": "Plane Dependency Complexity Analysis",
      "subtitle": "Analyze dependency complexity and risk levels of each plane",
      "columns": {
        "planeName": "Plane",
        "level": "Level",
        "dependencyCount": "Dependencies",
        "dependentCount": "Dependents",
        "complexityScore": "Complexity Score",
        "riskLevel": "Risk Level"
      },
      "riskLevels": {
        "low": "Low Risk",
        "medium": "Medium Risk",
        "high": "High Risk"
      },
      "stats": {
        "totalComplexity": "Total Complexity",
        "highRiskPlanes": "High Risk Planes",
        "mediumRiskPlanes": "Medium Risk Planes",
        "maxDependencies": "Max Dependencies"
      },
      "tooltips": {
        "dependencyPlanes": "Dependency Planes",
        "dependentPlanes": "Dependent Planes",
        "none": "None"
      },
      "riskExplanation": {
        "title": "Risk Level Explanation",
        "low": "Low Risk: Simple dependencies, complexity score < 10",
        "medium": "Medium Risk: Moderate dependencies, complexity score 10-20",
        "high": "High Risk: Complex dependencies, complexity score > 20"
      }
    },
    "operations": {
      "title": "Operation Instructions",
      "levelDescription": "Plane Hierarchy & Dependencies",
      "levelContent": "The system adopts a layered architecture design, from bottom-layer infrastructure to top-layer business scenarios. Each plane has clear responsibilities and dependencies.",
      "managementDescription": "Plane Management Features",
      "managementContent": "Supports basic operations like creating, editing, and deleting planes, as well as topology visualization and dependency analysis.",
      "levelDetails": {
        "l1": "L1 - Infrastructure Plane",
        "l1Desc": "Bottom-layer resources, no dependencies on other planes",
        "l2": "L2 - Middleware Plane",
        "l2Desc": "Depends on infrastructure plane",
        "l3": "L3 - Business System Plane",
        "l3Desc": "Depends on middleware and infrastructure planes",
        "l4": "L4 - Business Chain Plane",
        "l4Desc": "Depends on business system and middleware planes",
        "l5": "L5 - Business Scenario Plane",
        "l5Desc": "Depends on business chain, business system and infrastructure",
        "multipleDependency": "Multiple Dependencies",
        "complexDependency": "Complex Dependencies"
      },
      "features": {
        "title": "Features",
        "multipleDependencySupport": "Multiple Dependency Support",
        "multipleDependencySupportDesc": "Support one plane depending on multiple planes",
        "complexityAnalysis": "Dependency Complexity Analysis",
        "complexityAnalysisDesc": "Automatically analyze dependency complexity and risk levels",
        "visualization": "Visualization",
        "visualizationDesc": "Intuitively display dependencies between planes",
        "realTimeMonitoring": "Real-time Monitoring",
        "realTimeMonitoringDesc": "Plane status monitoring based on entity health status",
        "riskAssessment": "Risk Assessment",
        "riskAssessmentDesc": "Assess plane risk levels based on dependency complexity"
      }
    },
    "card": {
      "status": {
        "ACTIVE": "Healthy",
        "WARNING": "Warning", 
        "ERROR": "Error",
        "MAINTENANCE": "Maintenance",
        "UNKNOWN": "Unknown"
      },
      "tooltips": {
        "viewDetails": "View Details",
        "editConfig": "Edit Configuration",
        "addInstance": "Add Instance"
      },
      "labels": {
        "entityHealthStatus": "Entity Health Status",
        "level": "Level",
        "totalEntities": "Total Entities",
        "createdAt": "Created At",
        "dependencies": "Dependencies",
        "planesCount": "planes",
        "multipleDependency": "Multiple Dependencies"
      },
      "entityStats": {
        "noEntities": "No Entities",
        "healthy": "Healthy",
        "warning": "Warning",
        "error": "Error",
        "healthyTooltip": "Number of healthy entities",
        "warningTooltip": "Number of warning entities", 
        "errorTooltip": "Number of error entities"
      }
    },
    "errors": {
      "planeDefinitionLoadFailed": "Failed to load plane definitions",
      "topologyLoadFailed": "Failed to load topology structure",
      "metricsLoadFailed": "Failed to load metrics data",
      "loadDataFailed": "Failed to load plane data"
    },
    "loading": {
      "topology": "Loading plane topology...",
      "noPlaneData": "No plane data available"
    },
    "status": {
      "ACTIVE": "Active",
      "WARNING": "Warning",
      "ERROR": "Error",
      "INACTIVE": "Inactive"
    },
    "levels": {
      "infrastructure": "Infrastructure Plane",
      "middleware": "Middleware Plane",
      "businessSystem": "Business System Plane",
      "businessChain": "Business Chain Plane",
      "businessScenario": "Business Scenario Plane"
    },
    "form": {
      "basicInfo": "Basic Information",
      "planeName": "Plane Name",
      "planeId": "Plane ID",
      "displayName": "Display Name",
      "planeLevel": "Plane Level",
      "dependencies": "Dependencies",
      "configuration": "Configuration",
      "icon": "Icon",
      "color": "Color",
      "theme": "Theme"
    },
    "createEdit": {
      "createTitle": "Create Plane",
      "editTitle": "Edit Plane",
      "loadingData": "Loading data...",
      "planeNotFound": "Plane not found",
      "loadDataFailed": "Failed to load data",
      "createSuccess": "Plane created successfully",
      "updateSuccess": "Plane updated successfully",
      "createFailed": "Failed to create plane",
      "updateFailed": "Failed to update plane",
      "formLabels": {
        "planeName": "Plane Name",
        "planeNamePlaceholder": "Enter plane name",
        "planeNameHelp": "Unique identifier name for the plane, used for internal system reference",
        "displayName": "Display Name",
        "displayNamePlaceholder": "Enter display name",
        "displayNameHelp": "User-friendly name displayed in the interface",
        "description": "Plane Description",
        "descriptionPlaceholder": "Enter plane description",
        "level": "Plane Level",
        "levelHelp": "Select the level position of the plane in the system architecture",
        "dependencies": "Dependent Planes",
        "dependenciesHelp": "Select other planes that this plane depends on",
        "icon": "Plane Icon",
        "iconPlaceholder": "Enter icon character",
        "iconHelp": "Icon character used to identify the plane",
        "status": "Plane Status",
        "statusHelp": "Set the current operational status of the plane"
      },
      "levelOptions": {
        "1": "L1 - Infrastructure Plane",
        "2": "L2 - Middleware Plane",
        "3": "L3 - Business System Plane",
        "4": "L4 - Business Chain Plane",
        "5": "L5 - Business Scenario Plane"
      },
      "statusOptions": {
        "ACTIVE": "Active",
        "WARNING": "Warning",
        "ERROR": "Error",
        "MAINTENANCE": "Maintenance"
      },
      "preview": {
        "title": "Plane Preview",
        "subtitle": "Preview the display effect of the plane card",
        "entityHealth": "Entity Health Status",
        "level": "Level",
        "totalEntities": "Total Entities",
        "createdAt": "Created At",
        "dependencies": "Dependencies",
        "planesCount": "planes"
      },
      "validation": {
        "planeNameRequired": "Please enter plane name",
        "displayNameRequired": "Please enter display name",
        "levelRequired": "Please select plane level",
        "descriptionRequired": "Please enter plane description",
        "planeNameExists": "Plane name already exists",
        "circularDependency": "Circular dependency detected, please reselect"
      },
      "buttons": {
        "save": "Save",
        "cancel": "Cancel",
        "reset": "Reset"
      }
    }
  },
  "solutions": {
    "title": "Industry Models",
    "subtitle": "Predefined industry business scenarios, entity models and relationship architectures for rapid model development.",
    "refresh": "Refresh",
    "createSolution": "Create Solution",
    "stats": {
      "totalSolutions": "Total Solutions",
      "activeSolutions": "Active Solutions",
      "businessEntities": "Business Entities",
      "totalUsage": "Total Usage"
    },
    "search": {
      "placeholder": "Search solution name, description...",
      "industryType": "Industry Type",
      "complexity": "Complexity",
      "status": "Status"
    },
    "allIndustries": "All Industries",
    "complexity": {
      "simple": "Simple",
      "medium": "Medium",
      "complex": "Complex"
    },
    "status": {
      "active": "Active",
      "draft": "Draft",
      "deprecated": "Deprecated"
    },
    "industry": {
      "ecommerce": "E-commerce",
      "finance": "Finance & Banking",
      "healthcare": "Healthcare",
      "automotive": "Automotive",
      "education": "Education",
      "logistics": "Logistics"
    },
    "card": {
      "viewDetails": "View Details",
      "edit": "Edit",
      "businessEntities": "Business Entities",
      "usageCount": "Usage Count",
      "creator": "Creator",
      "updateTime": "Update Time"
    },
    "modal": {
      "basicInfo": "Basic Information",
      "solutionName": "Solution Name",
      "industryType": "Industry Type",
      "complexity": "Complexity",
      "status": "Status",
      "usageCount": "Usage Count",
      "entityCount": "Entity Count",
      "relationCount": "Relation Count",
      "creator": "Creator",
      "createTime": "Create Time",
      "tags": "Tags",
      "description": "Description",
      "solutionDescription": "Solution Description",
      "scenario": "Scenario",
      "businessEntities": "Business Entities",
      "entityRelations": "Entity Relations",
      "attributes": "Attributes"
    }
  },
  "entities": {
    "title": "Entity Management",
    "subtitle": "Manage various entity objects including reports, business links, systems, APIs, databases, etc.",
    "description": "Unified management of various entity objects in the system, including reports, business links, systems, APIs, databases, etc., providing complete entity lifecycle management.",
    "createTitle": "Create Entity",
    "editTitle": "Edit Entity",
    "createEntity": "Create Entity",
    "entityDetail": "Entity Details",
    "entityId": "Entity ID",
    "entityName": "Entity Name",
    "entityType": "Entity Type",
    "category": "Category",
    "searchPlaceholder": "Search entity name, description or tags",
    "typeFilter": "Type",
    "allTypes": "All Types",
    "noEntitiesFound": "No matching entities found",
    "relationshipGraph": "Relationship Graph",
    "relationshipGraphDesc": "Interactive relationship graph based on D3.js, showing complete technical architecture relationships from business scenarios to infrastructure.",
    "exportGraph": "Export Graph",
    "graphSettings": "Graph Settings",
    "refreshGraph": "Refresh Graph",
    "stats": {
      "totalEntities": "Total Entities",
      "activeEntities": "Active Entities",
      "warningEntities": "Warning Entities",
      "errorEntities": "Error Entities",
      "entityTypes": "Entity Types",
      "relationships": "Relationships",
      "totalRelations": "Total Relations",
      "relationTypes": "Relation Types",
      "graphNodes": "Graph Nodes",
      "connectedSystems": "Connected Systems"
    },
    "types": {
      "report": "Report",
      "businessLink": "Business Link",
      "businessSystem": "Business System",
      "api": "API",
      "database": "Database",
      "table": "Table",
      "middleware": "Middleware",
      "microservice": "Microservice",
      "scheduledJob": "Scheduled Job",
      "configuration": "Configuration"
    },
    "apiPath": "API Path",
    "belongsToDatabase": "Belongs to Database",
    "tableName": "Table Name",
    "columns": {
      "entityName": "Entity Name",
      "entityType": "Entity Type",
      "plane": "Plane",
      "status": "Status",
      "lastUpdate": "Last Update"
    },
    "form": {
      "entityName": "Entity Name",
      "entityType": "Entity Type",
      "belongsToPlane": "Belongs to Plane",
      "properties": "Properties",
      "tags": "Tags"
    }
  },
  "relationships": {
    "title": "Relationship Graph",
    "subtitle": "Visualize relationship networks and dependency structures between entities",
    "businessRelationshipGraph": "Business Relationship Graph",
    "graphView": "Graph View",
    "listView": "List View",
    "filterByType": "Filter by Type",
    "filterByPlane": "Filter by Plane",
    "zoomIn": "Zoom In",
    "zoomOut": "Zoom Out",
    "resetView": "Reset View",
    "resetNodePositions": "Reset Node Positions",
    "refreshGraph": "Refresh Graph",
    "legend": "Legend",
    "planes": "Planes",
    "nodeTypes": "Node Types",
    "relationTypes": "Relation Types",
    "type": "Type",
    "level": "Level",
    "plane": "Plane",
    "status": "Status",
    "nodeDetails": "Node Details",
    "basicInfo": "Basic Information",
    "clusterInfo": "Cluster Information",
    "nodeCount": "Node Count",
    "config": "Configuration",
    "technology": "Technology",
    "region": "Region",
    "databases": "Databases",
    "relationshipTypes": {
      "dependsOn": "Depends On",
      "contains": "Contains",
      "references": "References",
      "communicates": "Communicates"
    }
  },
  "sequences": {
    "title": "Sequence Management",
    "subtitle": "Manage business sequence definitions and execution processes",
    "description": "Manage and visualize business sequence processes in the system, supporting sequence diagram design and process analysis.",
    "createTitle": "Create Sequence",
    "editTitle": "Edit Sequence",
    "createSequence": "Create Sequence",
    "searchPlaceholder": "Search sequence name, description...",
    "typeFilter": "Sequence Type",
    "allTypes": "All Types",
    "allStatuses": "All Statuses",
    "sequenceName": "Sequence Name",
    "stepCount": "Step Count",
    "steps": " steps",
    "executionDuration": "Execution Duration",
    "executionUnit": " times",
    "participants": "Participants",
    "createdBy": "Created By",
    "createdAt": "Created At",
    "lastModified": "Last Modified",
    "sequenceDiagram": "Sequence Diagram",
    "viewSequenceDiagram": "View Sequence Diagram",
    "types": {
      "authentication": "Authentication",
      "business": "Business",
      "monitoring": "Monitoring",
      "data": "Data",
      "gateway": "Gateway"
    },
    "statuses": {
      "active": "Active",
      "inactive": "Inactive",
      "draft": "Draft"
    },
    "stats": {
      "totalSequences": "Total Sequences",
      "activeSequences": "Active Sequences",
      "executionCount": "Execution Count",
      "successRate": "Success Rate"
    },
    "columns": {
      "sequenceName": "Sequence Name",
      "triggerType": "Trigger Type",
      "status": "Status",
      "lastExecution": "Last Execution",
      "successRate": "Success Rate"
    }
  },
  "agents": {
    "title": "AI Agents",
    "subtitle": "AI Agent management and monitoring center",
    "createTitle": "Create Agent",
    "editTitle": "Edit Agent",
    "stats": {
      "totalAgents": "Total Agents",
      "activeAgents": "Active Agents",
      "totalTasks": "Total Tasks",
      "successRate": "Success Rate"
    },
    "columns": {
      "agentName": "Agent Name",
      "agentType": "Type",
      "status": "Status",
      "tasksCompleted": "Tasks Completed",
      "lastActive": "Last Active"
    },
    "form": {
      "agentName": "Agent Name",
      "agentType": "Agent Type",
      "model": "Model",
      "prompt": "Prompt Template",
      "capabilities": "Capabilities",
      "parameters": "Parameters"
    },
    "types": {
      "monitoring": "Monitoring Agent",
      "analysis": "Analysis Agent",
      "automation": "Automation Agent",
      "assistant": "Assistant Agent"
    }
  },
  "reports": {
    "title": "Report Management",
    "subtitle": "Unified management of various analysis reports generated by the system, supporting report creation, editing, publishing and sharing",
    "createTitle": "Create Report",
    "editTitle": "Edit Report",
    "generateReport": "Generate Report",
    "scheduleReport": "Schedule Report",
    "batchExport": "Batch Export",
    "stats": {
      "totalReports": "Total Reports",
      "published": "Published",
      "draft": "Draft",
      "totalDownloads": "Total Downloads",
      "scheduledReports": "Scheduled Reports",
      "generatedToday": "Generated Today",
      "averageSize": "Average Size"
    },
    "search": {
      "placeholder": "Search report name, creator...",
      "type": "Report Type",
      "status": "Status",
      "allTypes": "All Types",
      "allStatuses": "All Statuses"
    },
    "status": {
      "published": "Published",
      "draft": "Draft",
      "archived": "Archived"
    },
    "types": {
      "health": "Health Analysis",
      "dependency": "Dependency Analysis",
      "relationship": "Relationship Analysis", 
      "performance": "Performance Analysis",
      "system": "System Report",
      "security": "Security Report",
      "business": "Business Report"
    },
    "columns": {
      "reportName": "Report Name",
      "reportType": "Report Type",
      "status": "Status",
      "generatedTime": "Generated Time",
      "fileSize": "File Size"
    },
    "card": {
      "defaultDescription": "This is a detailed report about {{type}}, containing various system metrics analysis and recommendations. The report is rich in content and accurate in data, providing strong support for decision-making.",
      "fileSize": "File Size",
      "downloads": "Downloads",
      "storageUsage": "Storage Usage",
      "created": "Created",
      "updated": "Updated"
    }
  },
  "tasks": {
    "title": "Task Management",
    "subtitle": "Manage various tasks and execution status in the system",
    "inspection": {
      "title": "Inspection Tasks",
      "subtitle": "Manage and execute system inspection tasks, periodically trigger task collection execution, support health checks, performance monitoring, security scanning and other inspection types.",
      "createTitle": "Create Inspection Task",
      "editTitle": "Edit Inspection Task",
      "refresh": "Refresh",
      "createTask": "Create Inspection Task",
      "stats": {
        "totalTasks": "Total Inspection Tasks",
        "runningTasks": "Running Tasks",
        "completedToday": "Completed Today",
        "failureRate": "Failure Rate"
      },
      "search": {
        "placeholder": "Search inspection task name, description...",
        "type": "Type",
        "status": "Status",
        "schedule": "Schedule",
        "allTypes": "All Types",
        "allStatuses": "All Statuses"
      },
      "form": {
        "name": "Task Name",
        "namePlaceholder": "Enter inspection task name",
        "nameRequired": "Please enter task name",
        "description": "Description",
        "descriptionPlaceholder": "Enter inspection task description",
        "descriptionRequired": "Please enter task description",
        "type": "Inspection Type",
        "schedule": "Schedule Configuration",
        "taskCollections": "Task Collections",
        "enabled": "Enabled Status"
      },
      "types": {
        "healthCheck": "Health Check",
        "performanceMonitor": "Performance Monitor",
        "securityScan": "Security Scan",
        "logAnalysis": "Log Analysis"
      },
      "status": {
        "active": "Active",
        "paused": "Paused",
        "draft": "Draft",
        "completed": "Completed",
        "failed": "Failed"
      },
      "messages": {
        "startSuccess": "Inspection task started successfully",
        "pauseSuccess": "Inspection task paused successfully",
        "deleteSuccess": "Inspection task deleted successfully",
        "createSuccess": "Inspection task created successfully",
        "updateSuccess": "Inspection task updated successfully"
      },
      "tips": {
        "createHint": "After creating an inspection task, you can configure specific task collections and scheduling rules in the details page."
      },
      "card": {
        "viewDetails": "View Details",
        "edit": "Edit",
        "start": "Start",
        "pause": "Pause",
        "delete": "Delete",
        "taskCollections": " task collections",
        "lastExecution": "Last Execution",
        "nextExecution": "Next Execution",
        "successRate": "Success Rate",
        "executionCount": "Execution Count",
        "schedule": "Schedule",
        "creator": "Creator"
      },
      "modal": {
        "taskName": "Task Name",
        "scheduleType": "Schedule Type",
        "interval": "Execution Interval",
        "lastExecution": "Last Execution",
        "executionResult": "Execution Result",
        "taskCollections": "Task Collections"
      },
      "columns": {
        "taskName": "Task Name",
        "targetSystem": "Target System",
        "schedule": "Schedule",
        "lastRun": "Last Run",
        "status": "Status"
      },
      "detail": {
        "taskName": "Task Name",
        "taskType": "Task Type",
        "successRate": "Success Rate",
        "executionCount": "Execution Count",
        "avgDuration": "Average Duration",
        "seconds": " seconds",
        "nextExecution": "Next Execution",
        "creator": "Creator",
        "taskCollections": "Task Collections",
        "triggeredCollections": "Triggered Collections",
        "noCollections": "No Collections",
        "configParams": "Configuration Parameters",
        "timeout": "Timeout",
        "retryCount": "Retry Count",
        "alertThreshold": "Alert Threshold",
        "scheduleExpression": "Schedule Expression",
        "timezone": "Timezone",
        "checkpoints": "Checkpoints",
        "executionHistory": "Execution History",
        "recentResults": "Recent Results",
        "startTime": "Start Time",
        "endTime": "End Time",
        "executionStatus": "Execution Status",
        "executionDuration": "Execution Duration"
      }
    },
    "hooks": {
      "title": "Hook Tasks",
      "subtitle": "Manage and configure system Hook tasks, trigger task collection execution based on events, support Webhook, database, message queue and other Hook types.",
      "createTitle": "Create Hook Task",
      "editTitle": "Edit Hook Task",
      "refresh": "Refresh",
      "createHook": "Create Hook Task",
      "stats": {
        "totalHooks": "Total Hook Tasks",
        "activeHooks": "Active Hooks",
        "triggeredToday": "Triggered Today",
        "successRate": "Success Rate"
      },
      "search": {
        "placeholder": "Search Hook task name, description...",
        "type": "Type",
        "status": "Status",
        "event": "Event",
        "allTypes": "All Types",
        "allStatuses": "All Statuses"
      },
      "form": {
        "name": "Hook Name",
        "namePlaceholder": "Enter Hook task name",
        "nameRequired": "Please enter Hook name",
        "description": "Description",
        "descriptionPlaceholder": "Enter Hook task description",
        "descriptionRequired": "Please enter task description",
        "type": "Hook Type",
        "typePlaceholder": "Please select Hook type",
        "typeRequired": "Please select Hook type",
        "triggerEvent": "Trigger Event",
        "taskCollections": "Task Collections",
        "enabled": "Enabled Status",
        "retryDelay": "Retry Delay (seconds)",
        "retryDelayRequired": "Please set retry delay",
        "retryDelayPlaceholder": "Retry delay",
        "timeout": "Timeout (seconds)",
        "timeoutRequired": "Please set timeout",
        "timeoutPlaceholder": "Timeout"
      },
      "types": {
        "webhook": "Webhook",
        "database": "Database",
        "messageQueue": "Message Queue",
        "fileSystem": "File System",
        "apiCall": "API Call",
        "script": "Script"
      },
      "status": {
        "active": "Active",
        "inactive": "Inactive",
        "error": "Error",
        "pending": "Pending"
      },
      "messages": {
        "enableSuccess": "Hook task enabled successfully",
        "disableSuccess": "Hook task disabled successfully",
        "deleteSuccess": "Hook task deleted successfully",
        "createSuccess": "Hook task created successfully",
        "updateSuccess": "Hook task updated successfully"
      },
      "tips": {
        "createHint": "After creating a Hook task, you can configure specific trigger events and task collections in the details page."
      },
      "card": {
        "viewDetails": "View Details",
        "edit": "Edit",
        "enable": "Enable",
        "disable": "Disable",
        "delete": "Delete",
        "taskCollections": " task collections",
        "lastTriggered": "Last Triggered",
        "triggerCount": "Trigger Count",
        "successRate": "Success Rate",
        "triggerEvent": "Trigger Event",
        "creator": "Creator"
      },
      "modal": {
        "hookName": "Hook Name",
        "hookType": "Hook Type",
        "triggerEvent": "Trigger Event",
        "triggerConfig": "Trigger Configuration",
        "triggerConditions": "Trigger Conditions",
        "executionConfig": "Execution Configuration",
        "lastTriggered": "Last Triggered",
        "triggerResult": "Trigger Result",
        "taskCollections": "Task Collections",
        "triggeredCollections": "Triggered Collections",
        "noCollections": "No Collections"
      },
      "columns": {
        "hookName": "Hook Name",
        "triggerEvent": "Trigger Event",
        "status": "Status",
        "lastTriggered": "Last Triggered",
        "executionCount": "Execution Count"
      },
      "detail": {
        "retryDelay": "Retry Delay",
        "seconds": " seconds",
        "targetUrl": "Target URL",
        "httpMethod": "HTTP Method",
        "securityConfig": "Security Configuration",
        "authentication": "Authentication",
        "encryption": "Encryption",
        "ipWhitelist": "IP Whitelist",
        "noRestriction": "No Restriction",
        "authTypes": {
          "bearerToken": "Bearer Token",
          "databaseCredentials": "Database Credentials",
          "apiKey": "API Key",
          "basicAuth": "Basic Authentication",
          "oauth2": "OAuth2",
          "none": "No Authentication"
        }
      }
    },
    "collections": {
      "title": "Task Collections",
      "subtitle": "Task collection management and batch execution",
      "createTitle": "Create Task Collection",
      "editTitle": "Edit Task Collection",
      "refresh": "Refresh",
      "createCollection": "Create Task Collection",
      "stats": {
        "totalCollections": "Total Task Collections",
        "activeCollections": "Active Collections",
        "totalTasks": "Total Tasks",
        "executionRate": "Execution Rate"
      },
      "search": {
        "placeholder": "Search task collection name, description...",
        "type": "Type",
        "status": "Status",
        "priority": "Priority"
      },
      "form": {
        "name": "Task Collection Name",
        "namePlaceholder": "Enter task collection name",
        "nameRequired": "Please enter task collection name",
        "nameMaxLength": "Name cannot exceed 50 characters",
        "description": "Description",
        "descriptionPlaceholder": "Enter task collection description",
        "descriptionRequired": "Please enter task collection description",
        "descriptionMaxLength": "Description cannot exceed 200 characters",
        "type": "Collection Type",
        "priority": "Priority",
        "schedule": "Schedule Frequency",
        "scheduleRequired": "Please select schedule frequency",
        "schedulePlaceholder": "Please select schedule frequency",
        "targets": "Monitoring Targets",
        "actions": "Inspection Actions"
      },
      "filter": {
        "status": "Status",
        "frequency": "Schedule Frequency",
        "allStatus": "All Status",
        "allFrequency": "All Frequency"
      },
      "actions": {
        "healthCheck": "Health Check",
        "faultAnalysis": "Fault Analysis",
        "performanceAnalysis": "Performance Analysis",
        "securityScan": "Security Scan"
      },
      "actionDescriptions": {
        "healthCheck": "Check the operational status and health metrics of targets",
        "faultAnalysis": "Analyze anomalies and potential faults of targets",
        "performanceAnalysis": "Analyze performance metrics and bottlenecks of targets",
        "securityScan": "Scan security vulnerabilities and risks of targets"
      },
      "duration": {
        "healthCheck": "1-3 minutes",
        "faultAnalysis": "3-10 minutes",
        "performanceAnalysis": "5-15 minutes",
        "securityScan": "10-30 minutes"
      },
      "frequency": {
        "every5min": "Every 5 minutes",
        "every15min": "Every 15 minutes",
        "every30min": "Every 30 minutes",
        "everyHour": "Every hour",
        "everyDay": "Every day"
      },
      "status": {
        "active": "Active",
        "paused": "Paused",
        "draft": "Draft"
      },
      "detail": {
        "duration": "Duration",
        "suggestedFrequency": "Suggested Frequency",
        "monitoringTargets": "Monitoring Targets",
        "inspectionActions": "Inspection Actions",
        "entity": "Entity",
        "sequence": "Sequence",
        "inspectionActionsLabel": "Inspection Actions",
        "inUse": "In Use"
      },
      "entities": {
        "userService": "User Service",
        "orderService": "Order Service",
        "paymentService": "Payment Service",
        "databaseCluster": "Database Cluster",
        "redisCache": "Redis Cache",
        "apiGateway": "API Gateway"
      },
      "categories": {
        "microservice": "Microservice",
        "dataStorage": "Data Storage",
        "cacheService": "Cache Service",
        "gatewayService": "Gateway Service"
      },
      "messages": {
        "startSuccess": "Task collection started successfully",
        "pauseSuccess": "Task collection paused successfully",
        "deleteSuccess": "Task collection deleted successfully",
        "createSuccess": "Task collection created successfully",
        "updateSuccess": "Task collection updated successfully"
      },
      "tips": {
        "createHint": "After creating a task collection, you can add specific monitoring targets and inspection actions in the details page."
      },
      "modal": {
        "taskName": "Task Name",
        "scheduleFrequency": "Schedule Frequency",
        "lastExecution": "Last Execution",
        "monitoringTargets": "Monitoring Targets",
        "inspectionActions": "Inspection Actions"
      },
      "card": {
        "viewDetails": "View Details",
        "edit": "Edit",
        "start": "Start",
        "pause": "Pause",
        "delete": "Delete",
        "targets": "Monitoring Targets",
        "actions": "Inspection Actions",
        "entities": " entities",
        "sequences": " sequences",
        "lastExecution": "Last Execution",
        "nextExecution": "Next Execution",
        "creator": "Creator",
        "updateTime": "Update Time",
        "successRate": "Success Rate",
        "executionCount": "Execution Count",
        "schedule": "Schedule"
      },
      "columns": {
        "collectionName": "Collection Name",
        "taskCount": "Task Count",
        "status": "Status",
        "lastExecution": "Last Execution",
        "progress": "Progress"
      }
    }
  },
  "systemSettings": {
    "title": "System Settings",
    "subtitle": "System configuration and management functions",
    "models": {
      "title": "Model Management",
      "subtitle": "AI model configuration and version management",
      "createTitle": "Add Model",
      "editTitle": "Edit Model",
      "stats": {
        "totalModels": "Total Models",
        "activeModels": "Active Models",
        "totalCalls": "Total Calls",
        "averageLatency": "Average Latency"
      },
      "columns": {
        "modelName": "Model Name",
        "provider": "Provider",
        "version": "Version",
        "status": "Status",
        "callCount": "Call Count"
      },
      "form": {
        "modelName": "Model Name",
        "provider": "Provider",
        "apiKey": "API Key",
        "endpoint": "Endpoint",
        "parameters": "Parameters"
      }
    },
    "prompts": {
      "title": "Prompt Templates",
      "subtitle": "AI prompt template management and optimization",
      "createTitle": "Create Template",
      "editTitle": "Edit Template",
      "stats": {
        "totalTemplates": "Total Templates",
        "activeTemplates": "Active Templates",
        "usageCount": "Usage Count",
        "averageRating": "Average Rating"
      },
      "columns": {
        "templateName": "Template Name",
        "category": "Category",
        "language": "Language",
        "usageCount": "Usage Count",
        "rating": "Rating"
      },
      "form": {
        "templateName": "Template Name",
        "category": "Category",
        "content": "Template Content",
        "variables": "Variables",
        "examples": "Examples"
      }
    },
    "tags": {
      "title": "Tag Management",
      "subtitle": "System tag classification and management",
      "createTitle": "Create Tag",
      "editTitle": "Edit Tag",
      "stats": {
        "totalTags": "Total Tags",
        "activeTags": "Active Tags",
        "taggedItems": "Tagged Items",
        "categories": "Categories"
      },
      "columns": {
        "tagName": "Tag Name",
        "category": "Category",
        "color": "Color",
        "usageCount": "Usage Count",
        "description": "Description"
      },
      "form": {
        "tagName": "Tag Name",
        "category": "Category",
        "color": "Color",
        "icon": "Icon",
        "description": "Description"
      }
    }
  },
  "aiAssistant": {
    "title": "AI Assistant",
    "subtitle": "Intelligent conversation assistant and Q&A",
    "chatPlaceholder": "Please enter your question...",
    "send": "Send",
    "clear": "Clear Chat",
    "suggestions": "Suggested Questions",
    "thinking": "Thinking...",
    "error": "Sorry, an error occurred",
    "retry": "Retry"
  },
  "validation": {
    "required": "This field is required",
    "email": "Please enter a valid email address",
    "phone": "Please enter a valid phone number",
    "url": "Please enter a valid URL",
    "minLength": "Minimum {{min}} characters required",
    "maxLength": "Maximum {{max}} characters allowed",
    "pattern": "Invalid format",
    "number": "Please enter a valid number",
    "integer": "Please enter an integer",
    "positive": "Please enter a positive number",
    "range": "Please enter a value between {{min}} and {{max}}"
  },
  "messages": {
    "deleteConfirm": "Are you sure you want to delete this record?",
    "deleteSuccess": "Deleted successfully",
    "saveSuccess": "Saved successfully",
    "updateSuccess": "Updated successfully",
    "createSuccess": "Created successfully",
    "loadError": "Failed to load data",
    "networkError": "Network connection error",
    "permissionDenied": "Permission denied",
    "operationSuccess": "Operation successful",
    "operationFailed": "Operation failed",
    "confirmAction": "Confirm this action?",
    "unsavedChanges": "You have unsaved changes. Are you sure you want to leave?"
  },
  "filters": {
    "all": "All",
    "active": "Active",
    "inactive": "Inactive",
    "today": "Today",
    "thisWeek": "This Week",
    "thisMonth": "This Month",
    "lastWeek": "Last Week",
    "lastMonth": "Last Month",
    "custom": "Custom"
  },
  "pagination": {
    "total": "Total {{total}} items",
    "pageSize": "{{size}} items per page",
    "goto": "Go to",
    "page": "Page"
  },
  "theme": {
    "toggle": "Toggle Theme",
    "switchToLight": "Switch to Light Theme",
    "switchToDark": "Switch to Dark Theme",
    "light": "Light Theme",
    "dark": "Dark Theme"
  }
}
